$addonsFormHeight: 57px;

.input:focus,
.input.is-focused,
.input:active,
.input.is-active,
.textarea:focus,
.textarea.is-focused,
.textarea:active,
.textarea.is-active {
  border-color: white;
  box-shadow: none;
}

.form .input {
  height: $form-input-height;
}

.switch[type="checkbox"]+.label::before {
  background: rgba(255, 255, 255, 0.2);
}

.field:not(:last-child) {
  margin-bottom: 1rem;
}

.label {
  cursor: pointer;
  margin-bottom: 0;
  text-align: left;
}

.label:not(:last-child) {
  margin-bottom: 0.5rem;
}

.switch[type="checkbox"].is-medium.is-outlined + label::before {
  transition: border-color 100ms ease-in-out;
}

.switch[type="checkbox"].is-info.is-outlined:checked + label::before,
.switch[type="checkbox"].is-medium.is-outlined + label::before {
  background-color: white;
}

.switch[type="checkbox"].is-medium.is-outlined + label:hover::before {
  border-color: $cyan;
}

.switch[type="checkbox"].is-medium + label::before {
  top: 0.25rem;
}

.switch[type="checkbox"].is-medium + label::after {
  top: 0.5rem;
}

$hasAddonsformColor: $cyan;

.form .input,
.form .select select,
.form .textarea,
.react-select__control {
  background-color: rgba(255, 255, 255, 0.2);
}

.form .button,
.form .input,
.form .select select,
.form .textarea,
.react-select__control {
  border-radius: 8px;
  font-weight: 600;
  margin: 0;
  padding: 4px 20px;
  transition: all 200ms ease-in-out;

  @media screen and (max-width: $mobile) {
    font-size: 0.875rem;
    height: 50px;
    padding-bottom: 10px;
    padding-top: 10px;
  }
}

.form .input,
.form .react-select,
.form .buttons {
  display: flex;

  @media screen and (max-width: $tablet) {
    margin: 0;
  }
}

.form .buttons:first-child {
  margin-left: 0;
}

.form .buttons:last-child {
  margin-right: 0;
}

.form .textarea {
  border-radius: 8px;
  height: 160px;
  padding-top: 20px;

  @media screen and (max-width: $mobile) {
    height: 160px;
  }
}

.select:not(.is-multiple):not(.is-loading)::after {
  margin-top: -0.1rem;

  @media screen and (max-width: $mobile) {
    margin-top: -0.4rem;
  }
}

.select select,
input.input,
textarea.textarea,
.react-select__control {
  background-color: white;
  box-shadow: none;
  border-width: 2px;
  border-color: rgba(255, 255, 255, 0.0);
  color: white;
}

.method-addon {
  background-color: rgba(255, 255, 255, 0.2);
  display: inline-block;
  border-radius: 8px;
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  margin: 0;
  padding: 5px 20px 5px 19px;
  border-width: 3px;
  border-color: rgba(255, 255, 255, 0.2);
}

.input:hover,
.input.is-hovered,
.textarea:hover,
.textarea.is-hovered {
  border-color: rgba(255, 255, 255, 1);
}

form.is-active button.button,
form.is-active button.button:hover,
form.is-active button.button:focus,
form.is-active button.button:active,
form.is-active .select select,
form.is-active .select select:hover,
form.is-active .select select:focus,
form.is-active .select select:active,
form.is-active input.input,
form.is-active input.input:hover,
form.is-active input.input:focus,
form.is-active input.input:active,
form.is-active textarea.textarea,
form.is-active textarea.textarea:hover,
form.is-active textarea.textarea:focus,
form.is-active textarea.textarea:active {
  border-color: $cyan;
}

.form .control,
.form .input,
.form .textarea,
.form .select select,
.react-select__control,
.form .file-cta,
.form .file-name,
.form .button {
  line-height: inherit;
}

.label {
  font-weight: 600;
}

label.radio {
  color: $grey;
  display: flex;
  align-items: center;
  font-weight: 600;
  margin-top: 5px;
  margin-bottom: 20px;
  margin-right: 10px;
  width: 90%;
}

.radio-label.is-short {
  width: 200px;
}

.radio-label__other-input {
  margin-left: 40px;
  width: 80%;
}

input[type='radio'] {
  display: inline-block;
  margin-right: 10px;
  width: 20px;
  height: 20px;
}

label.radio,
.radio + .radio {
  margin-left: 10px;
}

.radio-label {
  display: inline-block;
  clear: both;
  font-family: $family-sans-serif;
  font-size: 1rem;
  width: 80%;
  transition: color 200ms ease-in-out;
}

.form.is-tall .input,
.form.is-tall .button {
  height: $form-input-height-tall;
}

.has-bg .select select,
.has-bg .react-select__control,
.has-bg input.input,
.has-bg textarea.textarea,
.has-bg__dark .select select,
.has-bg__dark .react-select__control,
.has-bg__dark input.input,
.has-bg__dark textarea.textarea {
  background-color: white;
  border-color: white;
  color: black;
}

.has-bg input.input:hover,
.has-bg input.input:focus,
.has-bg input.input:active,
.has-bg textarea.textarea:hover,
.has-bg textarea.textarea:focus,
.has-bg textarea.textarea:active {
  border-color: white;
}

.has-bg .label,
.has-bg__dark .label {
  color: white;
}

.has-addons button.button {
  border: 3px solid black;
  padding: 4px 25px 4px 20px;

  @media screen and (max-width: $mobile) {
    border-top-width: 0;
    padding: 4px 10px;
  }
}

form.has-addons.is-active input.input:hover,
form.has-addons.is-active input.input:active,
form.has-addons.is-active input.input:focus,
form.has-addons.is-active textarea.textarea:hover,
form.has-addons.is-active textarea.textarea:focus,
form.has-addons.is-active textarea.textarea:active {
  border-color: $hasAddonsformColor;
  border-right-color: white;
}

.field.has-addons {
  @media screen and (max-width: $mobile) {
    flex-direction: column;
  }
}

.field.has-addons .control:first-child:not(:only-child) .button,
.field.has-addons .control:first-child:not(:only-child) .input,
.field.has-addons .control:first-child:not(:only-child) .select select {
  @media screen and (max-width: $mobile) {
    border-top-left-radius: 10px !important;
    border-top-right-radius: 10px !important;
    border-bottom-left-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
  }
}

.field.has-addons .control:last-child:not(:only-child) .button,
.field.has-addons .control:last-child:not(:only-child) .input,
.field.has-addons .control:last-child:not(:only-child) .select select {
  @media screen and (max-width: $mobile) {
    border-bottom-right-radius: 10px !important;
    border-bottom-left-radius: 10px !important;
    border-top-left-radius: 0 !important;
    border-top-right-radius: 0 !important;
  }
}

.field.has-addons .button {
  background: black;
  text-transform: capitalize;
  width: 240px;
  z-index: 5;

  @media screen and (max-width: $mobile) {
    width: 100%;
  }
}

.field.has-addons .button:hover,
.field.has-addons .button:focus,
.field.has-addons .button:active {
  color: $cyan;
  transform: scale3d(1, 1, 1);
}

.input.is-white {
  background-color: white;
  border-color: white;
  color: black;
}

.has-addons input.input {
  margin: 0;
}

.form.is-warning .field {
  opacity: 0.4;
}

.field-addon--icon {
  height: 1.375rem;
  margin: 1rem 1rem 0.5rem;
  width: 1.375rem;
}

.field-addon--zep-token-logo path {
  fill: $grey;
}

.field-addon--error-exclamation path {
  fill: $red;
}

.form.is-warning .field-addon--icon path {
  fill: $yellow;
}

input.input.is-dark {
  background-color: lighten($dark, 10%);
  color: white;
  text-align: center;
}

input.input.is-dark:hover,
input.input.is-dark:focus,
input.input.is-dark:active {
  background-color: lighten($dark, 5%);
}

input.input.is-large {
  font-size: 1.5rem;
  padding: 1rem;
  max-width: 400px;

  @media screen and (max-width: $tablet) {
    font-size: 1.5rem;
    padding: 0.25rem;
  }

  @media screen and (max-width: $mobile) {
    font-size: 1.25rem;
    padding: 0.25rem;
  }
}

// Accordion
.event-name-accordion.accordion-enter-active,
.event-name-accordion.accordion-enter-done {
  height: 180px;
}

.event-topics-accordion.accordion-enter-active,
.event-topics-accordion.accordion-enter-done {
  height: 500px;
}

.accordion--signup-thank-you.accordion-enter-active,
.accordion--signup-thank-you.accordion-enter-done {
  height: 420px;
}

.accordion--signup-form.accordion-enter-active,
.accordion--signup-form.accordion-enter-done {
  height: 220px;
}

.color-block.is-primary .accordion--signup-thank-you.accordion-enter-active,
.color-block.is-primary .accordion--signup-thank-you.accordion-enter-done {
  height: 320px;
}

// REACT SELECT OVERRIDES
.select,
.react-select {
  border-width: 0;
  display: inline-flex;
  flex-direction: column;
  min-width: 190px;

  @media screen and (max-width: $widescreen) {
    max-width: 100%;
    min-width: 100%;
    width: 100%;
  }
}

.react-select .react-select__placeholder {
  cursor: text;
}

.react-select .react-select__placeholder {
  color: rgba(160, 180, 200, 0.5);
}

.react-select:hover .react-select__placeholder {
  color: rgba(160, 180, 200, 1);
}

.react-select.is-wide {
  width: 350px;

  @media screen and (max-width: $tablet) {
    width: 100%;
  }
}

.select select {
  height: $form-input-height !important;
  line-height: 2;
}

.react-select .react-select__control {
  border-width: 0;
  cursor: pointer !important;
  padding: 0;
}

.react-select__indicator-separator {
  display: none;
}

.react-select .react-select__menu {
  border-radius: 10px;
  border-bottom-left-radius: 10px;
  margin-bottom: 0;
  line-height: 1.3;
  font-size: inherit;
  z-index: 30000;

  @media screen and (max-width: $widescreen) {
    width: 100%;
  }
}

.react-select__menu-list {
  text-align: left;
  overflow-y: auto;
  overflow-x: hidden;
  position: relative;
  z-index: 30000;
}

.react-select .react-select__menu-notice {
  font-size: 1rem;
}

.react-select .react-select__option {
  color: black;
  cursor: pointer;
  font-size: 1rem;
  margin: 5px;
  padding: 4px 10px;
  width: 96%;
}

.react-select__option.react-select__option--is-focused {
  background-color: lighten($blue, 20%);
  border-radius: 5px;
  color: white !important;
}

.react-select__option.react-select__option--is-selected {
  background-color: lighten($blue, 2%);
  border-radius: 5px;
  color: white !important;
}

.event-box__variable .input.has-border-danger,
.has-border-danger {
  border: 2px solid $danger !important;
}

.has-border-success {
  border: 3px solid $success !important;
}

.field.has-addons .control:not(:last-child) {
  cursor: pointer;
  margin-right: 0;
}

.no-background-color {
  background-color: transparent !important;
}

.input.is-white:focus,
.input.is-white:active,
.textarea.is-white:focus,
.textarea.is-white:active {
  box-shadow: none;
}

form.is-inverse .label,
form.is-inverse .input,
form.is-inverse .textarea {
  color: black;
}

form.is-inverse .input,
form.is-inverse .textarea {
  background-color: #eaeaea;
}

form.is-inverse .input:hover,
form.is-inverse .textarea:hover,
form.is-inverse .input:focus,
form.is-inverse .textarea:focus {
  background-color: #f4f4f4;
  border-color: #f4f4f4;
}

form.is-inverse .input[disabled],
form.is-inverse .textarea[disabled] {
  background-color: #c5c5c5;
  border: none;
  color: #888;
}